version: "3.9"

services:
  db:
    image: postgres:15
    container_name: postgres_theater
    env_file:
      - .env
    environment:
      POSTGRES_DB: movies_password
      POSTGRES_USER: admin_movies
      POSTGRES_PASSWORD: password_cinema
    ports:
      - "55433:5432"
    volumes:
      - postgres_theater_data:/var/lib/postgresql/data/
    networks:
      - theater_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin_movies -d movies_password -h localhost || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_theater
    ports:
      - "3333:80"
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: maximuschampion2002@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 2261kol
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_theater_data:/var/lib/pgadmin
    networks:
      - theater_network

  redis:
    image: redis:7
    container_name: online_cinema_redis
    ports:
      - "6379:6379"
    networks:
      - theater_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  web:
    build: .
    container_name: online_cinema_web
    command: >
      sh -c "
      until pg_isready -h db -U admin_movies -d movies_password; do
        echo 'Waiting for Postgres...'; sleep 2;
      done &&
      uvicorn src.main:app --host 0.0.0.0 --port 8000
      "
    env_file:
      - .env
    environment:
      PYTHONPATH: /app/src
      DATABASE_URL: postgresql+asyncpg://admin_movies:password_cinema@db:5432/movies_password
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - theater_network

  celery:
    build: .
    container_name: online_cinema_celery
    command: celery -A src.celery_app worker --loglevel=info
    env_file:
      - .env
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql+asyncpg://admin_movies:password_cinema@db:5432/movies_password
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    networks:
      - theater_network

  beat:
    build: .
    container_name: online_cinema_beat
    command: celery -A src.celery_app beat --loglevel=info
    env_file:
      - .env
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql+asyncpg://admin_movies:password_cinema@db:5432/movies_password
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    networks:
      - theater_network

volumes:
  postgres_theater_data:
    driver: local
  pgadmin_theater_data:
    driver: local

networks:
  theater_network:
    driver: bridge
